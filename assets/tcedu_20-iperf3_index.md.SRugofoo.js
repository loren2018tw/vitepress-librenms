import{_ as e,o as t,c as s,R as a}from"./chunks/framework.Rav5NEMf.js";const p="/vitepress-librenms/assets/2024-05-16-13-27-40.z8c8EKXA.png",r="/vitepress-librenms/assets/2024-05-16-13-51-05.eYLRc5oM.png",i="/vitepress-librenms/assets/2024-05-16-13-51-56.pKlXUmQH.png",n="/vitepress-librenms/assets/2024-05-16-14-37-17.tjWLhifX.png",l="/vitepress-librenms/assets/2024-05-16-14-35-12._7xGZjKh.png",k=JSON.parse('{"title":"iperf3","description":"","frontmatter":{},"headers":[],"relativePath":"tcedu/20-iperf3/index.md","filePath":"tcedu/20-iperf3/index.md"}'),o={name:"tcedu/20-iperf3/index.md"},c=a('<h1 id="iperf3" tabindex="-1">iperf3 <a class="header-anchor" href="#iperf3" aria-label="Permalink to &quot;iperf3&quot;">​</a></h1><p>iperf 是一個自由可用的開放原始碼網路性能測試軟體程式。</p><ol><li><a href="https://ftp.tc.edu.tw/TC_limit/iperf3/" target="_blank" rel="noreferrer">臺中市教網中心下載</a></li><li><a href="https://iperf.fr/iperf-download.php" target="_blank" rel="noreferrer">iperf 官方網站下載</a></li></ol><p>下載解壓縮後，使用命令列視窗，進入剛剛解壓縮的目錄 我們可以使用檔案總管，在上方資料夾路徑的地方，打上 cmd + enter 就可以開啟命令列視窗，並進入該目錄</p><p><img src="'+p+'" alt=""></p><p>** 注意，一定要正常解壓縮，不能偷懶使用檔案總管直接點進去壓縮檔裡面，這樣打 cmd 只會開啟命令列視窗</p><h2 id="測試連到教網的速度" tabindex="-1">測試連到教網的速度 <a class="header-anchor" href="#測試連到教網的速度" aria-label="Permalink to &quot;測試連到教網的速度&quot;">​</a></h2><p>建議找一台最靠近防火牆的機器測試，這樣比較不會被校內網路干擾 <img src="'+r+'" alt=""></p><p>下載速度測試，記得參數 R 要大寫 <img src="'+i+'" alt=""></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>預設是使用 tcp 測試速度，其實使用 udp 測速會更接近線路傳輸速度，因為 udp 可以省略一些協定的溝通，要使用 udp 測試，可以加上 -u 的參數</p></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>iperf3 -c ftp.tc.edu.tw -R -u</span></span></code></pre></div><h3 id="tanet-網頁測速" tabindex="-1">TANet 網頁測速 <a class="header-anchor" href="#tanet-網頁測速" aria-label="Permalink to &quot;TANet 網頁測速&quot;">​</a></h3><p>iperf3 是比較準確的工具，但是缺點是要帶著 iperf3 的執行擋，如果突然在某台電腦想測試一下連線是否正常，可以使用 <a href="https://sp.tanet.edu.tw/" target="_blank" rel="noreferrer">TANet 的測速網頁代替</a> ， tanet 測速網頁還可以同時測試 ipv6 跟 ipv4 的速度</p><p><img src="'+n+`" alt=""></p><h2 id="測試校內電腦到防火牆的速度" tabindex="-1">測試校內電腦到防火牆的速度 <a class="header-anchor" href="#測試校內電腦到防火牆的速度" aria-label="Permalink to &quot;測試校內電腦到防火牆的速度&quot;">​</a></h2><p>找一台電腦執行 iperf3 -s ，這台電腦就可以變成 iperf3 server</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>   iperf3 -s</span></span></code></pre></div><p>其他電腦就可以用前面的指令測試到防火牆的速度了</p><p>其實 fortigate 防火牆有內建 iperf3 server，所以也可以開啟防火牆內建的 server，就可以省下另外找一台電腦 執行 iperf3 -s 了</p><h3 id="fortigate-開啟-iperf3-server" tabindex="-1">fortigate 開啟 iperf3 server <a class="header-anchor" href="#fortigate-開啟-iperf3-server" aria-label="Permalink to &quot;fortigate 開啟 iperf3 server&quot;">​</a></h3><p>先在防火牆 CLI控制台內，貼上以下指令啟用測速伺服器</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>config system global</span></span>
<span class="line"><span>    set speedtest-server enable</span></span>
<span class="line"><span>end</span></span></code></pre></div><p>接著再到各界面開啟要使用這功能 <img src="`+l+'" alt=""></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>經測試 fortigate 內建的 iperf3 似乎不支援 udp 模式</p></div><h3 id="架設-librespeed-測試網頁" tabindex="-1">架設 <a href="https://github.com/librespeed/speedtest" target="_blank" rel="noreferrer">LibreSpeed</a> 測試網頁 <a class="header-anchor" href="#架設-librespeed-測試網頁" aria-label="Permalink to &quot;架設 [LibreSpeed](https://github.com/librespeed/speedtest) 測試網頁&quot;">​</a></h3><p>跟前面一樣，如果臨時需要測試到機房的速度，還要下載 iperf3 程式有點麻煩，在機房放個測速點，會比較方便。</p><p>LibreSpeed No Flash, No Java, No Websocket, No Bullshit. This is a very lightweight speed test implemented in Javascript, using XMLHttpRequest and Web Workers.</p><p>如果不需要儲存測速結果，那安裝就非常簡單，把檔案放在一般 web server 就可以了。</p>',28),d=[c];function h(f,u,b,m,g,_){return t(),s("div",null,d)}const x=e(o,[["render",h]]);export{k as __pageData,x as default};
